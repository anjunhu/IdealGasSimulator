/*
 * physics.h
 */

#ifndef INC_PHYSICS_H_
#define INC_PHYSICS_H_

struct KalmanState{
	float q; //process noise covariance
	float r; //measurement noise covariance
	float x; //estimated value
	float p; //estimation error covariance
	float k; // adaptive Kalman filter gain.;
};

extern float kalmanFilterA ( KalmanState* ks, float measurement);

float gyro2work (float* gyro){

}

void leftRotateOne(float* InputArray, int length)
{
    int temp = InputArray[0], i;
    for (i = 0; i < length - 1; i++)
        InputArray[i] = InputArray[i + 1];
    InputArray[n-1] = temp;
}

#endif /* INC_PHYSICS_H_ */
